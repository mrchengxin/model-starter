#!/bin/bash

# Manage trojan-go as a service, mimic from Debian /etc/init.d/ssh

NAME=trojan-go
PIDFILE=/run/$NAME.pid
DIR=/usr/local/trojan-go-linux-amd64
DAEMON=$DIR/$NAME
CONFIG=$DIR/client.json
DAEMON_ARGS="-config $CONFIG"
STOP_SIGNAL=INT
USER=root
LOG=/tmp/$NAME.log

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

common_opts="--quiet --chuid $USER --pidfile $PIDFILE"

do_start() {
    if [ -f "$CONFIG" ]; then
        echo "Starting '$NAME'..."
        start-stop-daemon --start $common_opts --chdir $DIR --make-pidfile --background --startas \
            /bin/bash -- -c "exec $DAEMON $DAEMON_ARGS > $LOG 2>&1"
        echo "Started '$NAME'."
    else
        echo "Config file not found: $CONFIG"
    fi
}

do_stop() {
    opt=${@:-}
    echo "Stopping '$NAME'..."
    start-stop-daemon --stop $common_opts --signal $STOP_SIGNAL --oknodo $opt --remove-pidfile
    echo "Stopped '$NAME'."
}

do_status() {
    start-stop-daemon --status $common_opts && exit_status=$? || exit_status=$?
    case "$exit_status" in
    0)
        echo "Program '$NAME' is running."
        echo "CMD: $($DAEMON $DAEMON_ARGS)"
        echo "PID: $(cat $PIDFILE)"
        ;;
    1)
        echo "Program '$NAME' is not running but the pid file exists."
        echo "CMD: $($DAEMON $DAEMON_ARGS)"
        echo "PID: $(cat $PIDFILE)"
        ;;
    3)
        echo "Program '$NAME' is not running."
        echo "CMD: $($DAEMON $DAEMON_ARGS)"
        ;;
    4)
        echo "Unable to determine program '$NAME' status."
        ;;
    esac
}

case "$1" in
status)
    do_status
    ;;
start)
    do_start
    ;;
stop)
    do_stop
    ;;
restart)
    do_stop --retry 30
    do_start
    ;;
*)
    echo "Usage: "$1" {status|start|stop|restart}"
    exit 1
    ;;
esac

exit 0
